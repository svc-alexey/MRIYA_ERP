#Область Загрузка_Excel
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'XLSX'; en = 'XLSX'")
	+ "(*.XLSX)|*.XLSX";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Файл = ДиалогОткрытияФайла.ПолноеИмяФайла;   
		АдресВХ = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Файл));
		
		ИмяФайлаПриИзмененииНаСервере(АдресВХ);	
	Иначе
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл(Команда)  
	
	АдресВХ = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Файл));
	ПрочитатьФайлНаСервере(АдресВХ);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлНаСервере(АдресВХ)
	
	ДВД = ПолучитьИзВременногоХранилища(АдресВХ);
	ИмяВрФайла = ПолучитьИмяВременногоФайла("XLSX");
	ДВД.Записать(ИмяВрФайла);
	
	 Данные.Очистить();
	//Вывод в табличный документ

	ТабличныйДокумент = Новый ТабличныйДокумент;

	ТабличныйДокумент.Прочитать(ИмяВрФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);

	//вывод в таблицу значений

	ПЗ = Новый ПостроительЗапроса;

	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область());

	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;

	ПЗ.ЗаполнитьНастройки();

	ПЗ.Выполнить();
	
	ТаблицаРезультат = ПЗ.Результат.Выгрузить();
    
    // Создаем новую таблицу значений с колонками строкового типа
    ТаблицаЗначений = Новый ТаблицаЗначений;
    Для Каждого Колонка Из ТаблицаРезультат.Колонки Цикл
        ТаблицаЗначений.Колонки.Добавить(Колонка.Имя, Новый ОписаниеТипов("Строка"));
    КонецЦикла;
    
    // Заполняем новую таблицу, преобразуя все значения в строки
    Для Каждого Строка Из ТаблицаРезультат Цикл
        НоваяСтрока = ТаблицаЗначений.Добавить();
        Для Каждого Колонка Из ТаблицаРезультат.Колонки Цикл
            Значение = Строка[Колонка.Имя];
            НоваяСтрока[Колонка.Имя] = Строка(Формат(Значение, "ЧГ=")); // Преобразуем любое значение в строку
        КонецЦикла;
    КонецЦикла;

		
	// Создаем таблицу результата с теми же колонками
    ТаблицаРезультата = Новый ТаблицаЗначений;
    Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
        ТаблицаРезультата.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаРезультата.Колонки.Добавить("НайденМатериал", Новый ОписаниеТипов("Булево"));
    ТаблицаРезультата.Колонки.Добавить("НайденаЗамена1", Новый ОписаниеТипов("Булево"));
    ТаблицаРезультата.Колонки.Добавить("НайденаЗамена2", Новый ОписаниеТипов("Булево"));
    ТаблицаРезультата.Колонки.Добавить("НайденаЗамена3", Новый ОписаниеТипов("Булево"));
    ТаблицаРезультата.Колонки.Добавить("НайденаЗамена4", Новый ОписаниеТипов("Булево"));
    ТаблицаРезультата.Колонки.Добавить("НайденаЗамена5", Новый ОписаниеТипов("Булево"));
	
	// Обработка полученной таблицы значений
    Для Каждого СтрокаТЗ Из ТаблицаЗначений Цикл
        
        НоваяСтрокаРезультата = Неопределено;
        
        // Проходим по всем колонкам
        Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
            ЗначениеКолонки = СтрокаТЗ[Колонка.Имя];
            
            Если ЗначениеЗаполнено(ЗначениеКолонки) Тогда
                
                Запрос = Новый Запрос;
                Запрос.Текст = 
                "ВЫБРАТЬ
                |    Номенклатура.Ссылка КАК Ссылка
                |ИЗ
                |    Справочник.Номенклатура КАК Номенклатура
                |ГДЕ
                |    Номенклатура.Наименование = &Наименование
                |    И НЕ Номенклатура.ПометкаУдаления";
                
                Запрос.УстановитьПараметр("Наименование", ЗначениеКолонки);
                Результат = Запрос.Выполнить();
                
                Если НЕ Результат.Пустой() Тогда
                    // Если номенклатура найдена в любой колонке, создаем строку результата
                    Если НоваяСтрокаРезультата = Неопределено Тогда
                        НоваяСтрокаРезультата = ТаблицаРезультата.Добавить();
                        // Сначала копируем все значения как есть
                        Для Каждого Кол Из ТаблицаЗначений.Колонки Цикл
                            НоваяСтрокаРезультата[Кол.Имя] = СтрокаТЗ[Кол.Имя];
                        КонецЦикла;
                        // Инициализируем булевы колонки как Ложь
                        НоваяСтрокаРезультата.НайденМатериал = Ложь;
                        НоваяСтрокаРезультата.НайденаЗамена1 = Ложь;
                        НоваяСтрокаРезультата.НайденаЗамена2 = Ложь;
                        НоваяСтрокаРезультата.НайденаЗамена3 = Ложь;
                        НоваяСтрокаРезультата.НайденаЗамена4 = Ложь;
                        НоваяСтрокаРезультата.НайденаЗамена5 = Ложь;
                    КонецЕсли;
                    
                    // Заменяем значение в той колонке, где нашли, на ссылку
                    Выборка = Результат.Выбрать();
                    Выборка.Следующий();
                    НайденнаяСсылка = Выборка.Ссылка;
                    НоваяСтрокаРезультата[Колонка.Имя] = НайденнаяСсылка;
                    
                    // Устанавливаем соответствующий флаг в Истина
                    ИндексКолонки = ТаблицаЗначений.Колонки.Индекс(Колонка);
                    Если ИндексКолонки = 0 Тогда
                        НоваяСтрокаРезультата.НайденМатериал = Истина;
                    ИначеЕсли ИндексКолонки = 1 Тогда
                        НоваяСтрокаРезультата.НайденаЗамена1 = Истина;
                    ИначеЕсли ИндексКолонки = 2 Тогда
                        НоваяСтрокаРезультата.НайденаЗамена2 = Истина;
                    ИначеЕсли ИндексКолонки = 3 Тогда
                        НоваяСтрокаРезультата.НайденаЗамена3 = Истина;
                    ИначеЕсли ИндексКолонки = 4 Тогда
                        НоваяСтрокаРезультата.НайденаЗамена4 = Истина;
                    ИначеЕсли ИндексКолонки = 5 Тогда
                        НоваяСтрокаРезультата.НайденаЗамена5 = Истина;
                    КонецЕсли;
                    
                    Сообщить("Найдена номенклатура для: " + ЗначениеКолонки + " в колонке " + Колонка.Имя + " - " + НайденнаяСсылка);
                КонецЕсли;
                
            КонецЕсли;
            
        КонецЦикла;
        
    КонецЦикла;	
	Данные.Загрузить(ТаблицаРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ИмяФайлаПриИзмененииНаСервере(АдресВХ)
	ДВД = ПолучитьИзВременногоХранилища(АдресВХ);
	ИмяВрФайла = ПолучитьИмяВременногоФайла("XLSX");
	ДВД.Записать(ИмяВрФайла);
	
	ТабличныйДокумент.Прочитать(ИмяВрФайла, СпособЧтенияЗначенийТабличногоДокумента.Текст);
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	
	АдресВХ = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Файл));
	ИмяФайлаПриИзмененииНаСервере(АдресВХ);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьАналогиНаСервере()
	
	
	ТаблицаЗнач = Данные.Выгрузить();
	
	// Проходим по всем строкам таблицы Данные
    Для Каждого СтрокаТаблицы Из ТаблицаЗнач Цикл
        
        // Проходим по всем колонкам строки
        Для Каждого Колонка Из ТаблицаЗнач.Колонки Цикл
            
            ЗначениеЯчейки = СтрокаТаблицы[Колонка.Имя];
            
            // Проверяем, заполнена ли ячейка и является ли значение ссылкой на Номенклатуру
            Если ЗначениеЗаполнено(ЗначениеЯчейки) И ТипЗнч(ЗначениеЯчейки) = Тип("СправочникСсылка.Номенклатура") Тогда
                
                // Создаем новый документ
                Документ = Документы.РазрешениеНаЗаменуМатериалов.СоздатьДокумент();
                Документ.Дата = ТекущаяДата();                                      
				Документ.ДатаНачалаДействия = ТекущаяДата();
				Документ.Статус = Перечисления.СтатусыРазрешенийНаЗаменуМатериалов.Утверждено;
				Документ.УказаниеПоПрименению = "Применять с осторожностью";
				Документ.Ответственный = Пользователи.ТекущийПользователь();
				Документ.Комментарий	= "#Создано обработкой загрузки из EXCEL";
                // Заполните другие шапочные реквизиты документа, если нужно
                // Например: Документ.Организация = Справочники.Организации.НайтиПоКоду("0001");
                
                // Добавляем материал в табличную часть Материалы
                НоваяСтрокаМатериалы = Документ.Материалы.Добавить();
                НоваяСтрокаМатериалы.Номенклатура = ЗначениеЯчейки;
				НоваяСтрокаМатериалы.КоличествоУпаковок = 1;
                
                // Добавляем остальные номенклатуры из строки как аналоги
                Для Каждого ДругаяКолонка Из ТаблицаЗнач.Колонки Цикл
                    Если ДругаяКолонка.Имя <> Колонка.Имя Тогда // Пропускаем текущую колонку
                        ДругоеЗначение = СтрокаТаблицы[ДругаяКолонка.Имя];
                        Если ЗначениеЗаполнено(ДругоеЗначение) И ТипЗнч(ДругоеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
                            НоваяСтрокаАналоги = Документ.Аналоги.Добавить();
                            НоваяСтрокаАналоги.Номенклатура = ДругоеЗначение;
							НоваяСтрокаАналоги.КоличествоУпаковок = 1;
                        КонецЕсли;
                    КонецЕсли;
                КонецЦикла;
                
                // Записываем и проводим документ
                Попытка
                    Документ.Записать(РежимЗаписиДокумента.Проведение);
                    Сообщить("Создан документ: " + Документ.Ссылка + " для материала " + ЗначениеЯчейки);
                Исключение
                    Сообщить("Ошибка при создании документа для " + ЗначениеЯчейки + ": " + ОписаниеОшибки());
                КонецПопытки;
                
            КонецЕсли;
            
        КонецЦикла;
        
    КонецЦикла;			

КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	СоздатьАналогиНаСервере();
КонецПроцедуры
#КонецОбласти


