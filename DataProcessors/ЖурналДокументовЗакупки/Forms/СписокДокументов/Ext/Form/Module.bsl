#Область ОбработчикиСобытийФормы

// Обработчик события формы ПриСозданииНаСервере (расширение)
//
// Параметры:
//   Отказ - Булево - Признак отказа от создания формы
//   СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки
//
&После("ПриСозданииНаСервере")
Процедура MRS_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Инициализация интеграции с Диадок
	MRS_ИнтеграцияДиадокКлиентСервер.ДополнитьФормуИнтеграциейДиадок(ЭтотОбъект, "СписокДокументыЗакупки");
	
	// Установка параметров запроса для отображения статусов только за текущий день
	СписокДокументыЗакупки.Параметры.УстановитьЗначениеПараметра("НачалоТекДата", НачалоДня(ТекущаяДатаСеанса()));
	СписокДокументыЗакупки.Параметры.УстановитьЗначениеПараметра("КонецТекДата", КонецДня(ТекущаяДатаСеанса()));
	
КонецПроцедуры

#КонецОбласти

#Область ИнтеграцияДиадок

// Обработчик команды перехода в личный кабинет Диадок
//
// Параметры:
//   Команда - КомандаФормы - Выполняемая команда
//
&НаКлиенте
Процедура ДиадокПерейтиВЛичныйКабинет(Команда)
	
	ТекущиеДанные = Элементы.СписокДокументыЗакупки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = ТекущиеДанные.Ссылка;
	
	MRS_ИнтеграцияДиадокКлиент.ПерейтиКДокументуДиадок(ЭтотОбъект, Ссылка);
	
КонецПроцедуры

// Обработчик команды получения статуса документа в Диадок
//
// Параметры:
//   Команда - КомандаФормы - Выполняемая команда
//
&НаКлиенте
Процедура ДиадокПолучитьСтатус(Команда)
	
	ВыделенныеСтроки = Элементы.СписокДокументыЗакупки.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Не выбрано ни одного документа для получения статуса");
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив;
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.СписокДокументыЗакупки.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
			МассивДокументов.Добавить(ДанныеСтроки.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивДокументов.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Выбранные строки не содержат документов для обработки");
		Возврат;
	КонецЕсли;
	
	// Вызываем клиентскую процедуру, которая сама обновит список после обработки
	MRS_ИнтеграцияДиадокКлиент.ПолучитьСтатусДокументаДиадок(ЭтотОбъект, МассивДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область РасширениеТекстовЗапросов

// Переопределение текста запроса для отображения статусов Диадок
//
// Возвращаемое значение:
//   Строка - Текст запроса с дополнительными полями для Диадок
//
&Вместо("ТекстЗапросаСписокДокументыЗакупки")
Функция ITS_ДиадокТекстЗапросаСписокДокументыЗакупки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеестрДокументов.Ссылка КАК Ссылка,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.Статус,
	|	РеестрДокументов.Проведен,
	|	РеестрДокументов.ПометкаУдаления,
	|	РеестрДокументов.ХозяйственнаяОперация,
	|	РеестрДокументов.Партнер,
	|	ВЫРАЗИТЬ(РеестрДокументов.Контрагент.Ключ КАК Справочник.Контрагенты) КАК Контрагент,
	|	РеестрДокументов.Контрагент КАК КонтрагентКлюч,
	|	РеестрДокументов.Договор,
	|	РеестрДокументов.Организация,
	|	РеестрДокументов.Подразделение,
	|	РеестрДокументов.МестоХранения КАК МестоХранения,
	|	ВЫРАЗИТЬ(РеестрДокументов.МестоХранения.Ключ КАК Справочник.Склады) КАК Склад,
	|	РеестрДокументов.Валюта,
	|	РеестрДокументов.Сумма КАК СуммаДокумента,
	|	РеестрДокументов.Ответственный КАК Менеджер,
	|	РеестрДокументов.Автор КАК Автор,
	|	РеестрДокументов.Комментарий,
	|	РеестрДокументов.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
	|	РеестрДокументов.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
	|	РеестрДокументов.Дополнительно,
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|	СостоянияЭД.СостояниеЭДО,
	|	СостоянияЭД.ПредставлениеСостояния КАК ПредставлениеСостояния,	
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|	ВЫБОР
	|		КОГДА ДокументыСОшибкамиПроверкиКонтрагентов.Документ ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиПроверкиКонтрагентов,
	|	ВЫБОР
	|		КОГДА РеестрДокументов.Проведен
	|			ТОГДА 0
	|		КОГДА РеестрДокументов.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НестандартнаяКартинка,
	|	РеестрДокументов.ДополнительнаяЗапись,
	|	РеестрДокументов.ТипСсылки,
	|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) КАК ТипЗначения,
	|	&СтатусПроверки КАК СтатусПроверки,
	|	&ИндикаторПроверки КАК ИндикаторПроверки,
	|	РеестрДокументов.СторноИсправление КАК СторноИсправление,
	|	ВЫБОР
	|		КОГДА НЕ РеестрДокументов.СторноИсправление
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеестрДокументов.СторнируемыйДокумент
	|	КОНЕЦ КАК СторнируемыйИсправляемыйДокумент,
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	|	NULL КАК СостояниеОригиналаПервичногоДокумента,
	|	ИСТИНА КАК ОбщееСостояние,
	|	0 КАК СостояниеОригиналПолучен,
	|	ВЫРАЗИТЬ("""" КАК Строка(50)) КАК СостояниеГИСМТ
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	|,ВЫБОР
	|	КОГДА ЕСТЬNULL(ДатаПолучСтатуса.Значение, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) >= &НачалоТекДата
	|			И ЕСТЬNULL(ДатаПолучСтатуса.Значение, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) <= &КонецТекДата
	|		ТОГДА Статус_Диадок.Значение
	|	ИНАЧЕ """"
	|КОНЕЦ КАК СтатусЭДО,
	|ВЫБОР
	|	КОГДА ЕСТЬNULL(ДополнительныеСведения.Значение, """") = """"
	|		ТОГДА ЛОЖЬ
	|	ИНАЧЕ ИСТИНА
	|КОНЕЦ КАК СозданВДиадок
	|{ГДЕ
	|	РеестрДокументов.Ссылка.* КАК Ссылка,
	|	РеестрДокументов.МестоХранения.* КАК МестоХранения,
	|	ВЫРАЗИТЬ(РеестрДокументов.МестоХранения.Ключ КАК Справочник.Склады).* КАК Склад,
	|	РеестрДокументов.Организация.* КАК Организация,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.Статус КАК Статус,
	|	РеестрДокументов.ТипСсылки КАК ТипСсылки,
	|	РеестрДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РеестрДокументов.Партнер.* КАК Партнер,
	|	ВЫРАЗИТЬ(РеестрДокументов.Контрагент.Ключ КАК Справочник.Контрагенты).* КАК Контрагент,
	|	РеестрДокументов.Договор.* КАК Договор,
	|	РеестрДокументов.Подразделение.* КАК Подразделение,
	|	РеестрДокументов.Ответственный.* КАК Менеджер,
	|	РеестрДокументов.Автор.* КАК Автор,
	|	РеестрДокументов.Дополнительно КАК Дополнительно,
	|	РеестрДокументов.Комментарий КАК Комментарий,
	|	РеестрДокументов.Проведен КАК Проведен,
	|	РеестрДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	(РеестрДокументов.ДатаДокументаИБ >= &НачалоПериода
	|	И РеестрДокументов.ДатаДокументаИБ <= &КонецПериода)}
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		{
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПоОбъектамУчетаЭДО КАК СостоянияЭД
	|		ПО (СостоянияЭД.СсылкаНаОбъект = РеестрДокументов.Ссылка)
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыСОшибкамиПроверкиКонтрагентов КАК ДокументыСОшибкамиПроверкиКонтрагентов
	|		ПО РеестрДокументов.Ссылка = ДокументыСОшибкамиПроверкиКонтрагентов.Документ
	|		И (&ИспользованиеПроверкиВозможно)
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДатаПолучСтатуса
	|	ПО РеестрДокументов.Ссылка = ДатаПолучСтатуса.Объект
	|		И (ДатаПолучСтатуса.Свойство.ИдентификаторДляФормул = ""ДатаПолученияСтатуса"")
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК Статус_Диадок
	|	ПО РеестрДокументов.Ссылка = Статус_Диадок.Объект
	|		И (Статус_Диадок.Свойство.ИдентификаторДляФормул = ""СтатусДиадок"")
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|	ПО РеестрДокументов.Ссылка = ДополнительныеСведения.Объект
	|		И (ДополнительныеСведения.Свойство.ИдентификаторДляФормул = ""ИдентификаторЯщикДокументаВДиадок"")
	|}";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
