Функция ТестGET(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Ответ.Заголовки.Вставить("Content-type", "application/json;charset=utf-8");
	
	Ответ.УстановитьТелоИзСтроки("Ок.");
	
	Возврат Ответ;
	
КонецФункции

Функция ЗаполнитьДанныеДоговоровКонтрагентов_POST(Запрос)
	
	ТекстЗапроса = Запрос.ПолучитьТелоКакСтроку();

	Попытка
		
		JSON = Новый ЧтениеJSON;
		
		JSON.УстановитьСтроку(ТекстЗапроса);
		
		Данные = ПрочитатьJSON(JSON,, "Дата");
		
	Исключение
		
		Ответ = Новый HTTPСервисОтвет(500);
		
		Ответ.Заголовки.Вставить("Content-type", "application/json;charset=utf-8");
	
		Ответ.УстановитьТелоИзСтроки(ОписаниеОшибки());
		
		Возврат Ответ;
		
	КонецПопытки;

	КЭШ = Новый Соответствие;
	Результат = Новый Массив;
	
	Для Каждого Параметры Из Данные Цикл 
		
		РезультатЭлемента = Новый Структура;
		
		РезультатЭлемента.Вставить("Идентификатор", Параметры.ДоговорКонтрагента.Идентификатор);
		
		РезультатЭлемента.Вставить("Успешно", Ложь);
		РезультатЭлемента.Вставить("Ошибки",  Новый Массив);
		
		Результат.Добавить(РезультатЭлемента);
		
		ДоговорКонтрагента = НайтиДоговорКонтрагента(Параметры, КЭШ, РезультатЭлемента.Ошибки);
		
		Если ДоговорКонтрагента = Неопределено Тогда 			
			Продолжить;			
		КонецЕсли;
		
		// Договор контрагента.
		
		ОбъектДоговор = ДоговорКонтрагента.ПолучитьОбъект();
		
		ОбъектДоговор.IT_ВариантОплаты = Параметры.ВариантОплаты;
		
		ОбъектДоговор.IT_ЛимитДоговора = Параметры.ЛимитДоговора;
		ОбъектДоговор.IT_СуммаДоговора = Параметры.СуммаДоговора;
		ОбъектДоговор.IT_СуммаВзаиморасчетов = Параметры.СуммаВзаиморасчетов;
		ОбъектДоговор.IT_СуммаВзаиморасчетовПоДоговоруНеПроведенныхДокументов = Параметры.СуммаВзаиморасчетовПоДоговоруНеПроведенныхДокументов;
		
		ОбъектДоговор.ОбменДанными.Загрузка = Истина;
		
		Попытка
			
			ОбъектДоговор.Записать();
			
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			РезультатЭлемента.Ошибки.Добавить(ТекстОшибки);
			
		КонецПопытки;
		
		РезультатЭлемента.Успешно = Истина;
		
	КонецЦикла;

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, Результат);
	
	Тело = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	
	Ответ.УстановитьТелоИзСтроки(Тело);
	
	Возврат Ответ;
	
КонецФункции

Функция НайтиДоговорКонтрагента(Параметры, КЭШ, Ошибки)
	
	Организация = НайтиОрганизацию(Параметры.Организация, КЭШ, Ошибки);
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Контрагент = НайтиКонтрагента(Параметры.Контрагент, КЭШ, Ошибки);
		
	Если Не ЗначениеЗаполнено(Контрагент) Тогда 
		Возврат Неопределено;		
	КонецЕсли;
	
	Значение = КЭШ.Получить("ДоговорКонтрагента_" + Параметры.ДоговорКонтрагента.Идентификатор);
	
	Если Значение <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Значение.ТекстОшибки) Тогда 
			
			Ошибки.Добавить(Значение.ТекстОшибки);
			
		КонецЕсли;
		
		Возврат Значение.Ссылка;
		
	КонецЕсли;

	Идентификатор = Параметры.ДоговорКонтрагента.Идентификатор;
	
	ДоговорКонтрагентов = Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(Новый УникальныйИдентификатор(Идентификатор));
	
	Если ОбщегоНазначения.СсылкаСуществует(ДоговорКонтрагентов) Тогда 
		
		ДобавитьЗначениеВ_КЭШ(Идентификатор, КЭШ, ДоговорКонтрагентов);
		
		Возврат ДоговорКонтрагентов;
		
	КонецЕсли;

	Дата  = Параметры.ДоговорКонтрагента.Дата;
	Номер = Параметры.ДоговорКонтрагента.Номер;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Дата = &Дата
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Дата",  Дата);
	Запрос.УстановитьПараметр("Номер", Номер);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент",  Контрагент);
	
	РезультатЗарпоса = Запрос.Выполнить();
	
	Если РезультатЗарпоса.Пустой() Тогда 
		
		ТекстОшибки = "Договор №" + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + " не найден...";
		
		ДобавитьЗначениеВ_КЭШ(Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат = РезультатЗарпоса.Выбрать();
	
	Если Не Результат.Количество() = 1 Тогда 
		
		ТекстОшибки = "Найдено несколько договоров №" + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + "...";
		
		ДобавитьЗначениеВ_КЭШ(Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат.Следующий();
	
	ДобавитьЗначениеВ_КЭШ(Идентификатор, КЭШ, Результат.Ссылка);
	
	Возврат Результат.Ссылка;
	
КонецФункции

Функция НайтиОрганизацию(Параметры, КЭШ, Ошибки)
	
	Значение = КЭШ.Получить("Организация_" + Параметры.Идентификатор);
	
	Если Значение <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Значение.ТекстОшибки) Тогда 
			
			Ошибки.Добавить(Значение.ТекстОшибки);
			
		КонецЕсли;
		
		Возврат Значение.Ссылка;
		
	КонецЕсли;
	
	Организация = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(Параметры.Идентификатор));
	
	Если ОбщегоНазначения.СсылкаСуществует(Организация) Тогда 
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ, Организация);
		
		Возврат Организация;
		
	КонецЕсли;

	ИНН = Параметры.ИНН;
	КПП = Параметры.КПП;
	
	ТекстОшибки = "";
	
	Если Не ЗначениеЗаполнено(ИНН) И Не ЗначениеЗаполнено(КПП) Тогда 
		
		ТекстОшибки = "Организация " + Параметры.Наименование + " ИНН и КПП не заполнено...";
		
	ИначеЕсли Не ЗначениеЗаполнено(ИНН) Тогда 
		
		ТекстОшибки = "Организация " + Параметры.Наименование + " ИНН не заполнено...";
		
	ИначеЕсли Не ЗначениеЗаполнено(КПП) Тогда 
		
		ТекстОшибки = "Организация " + Параметры.Наименование + " КПП не заполнено...";
		
	КонецЕсли;
	
	Если ТекстОшибки <> "" Тогда 
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ИНН = &ИНН
	|	И Организации.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	РезультатЗарпоса = Запрос.Выполнить();
	
	Если РезультатЗарпоса.Пустой() Тогда 
		
		ТекстОшибки = "Организация " + Параметры.Наименование + " с ИНН: " + ИНН + ", КПП: " + КПП + " не найден...";
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат = РезультатЗарпоса.Выбрать();
	
	Если Не Результат.Количество() = 1 Тогда 
		
		ТекстОшибки = "Организация " + Параметры.Наименование + ", найдено несколько организаций с ИНН: " + ИНН + ", КПП: " + КПП + "...";
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат.Следующий();
	
	ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ, Результат.Ссылка);
	
	Возврат Результат.Ссылка;
	
КонецФункции

Функция НайтиКонтрагента(Параметры, КЭШ, Ошибки)
	
	Значение = КЭШ.Получить("Контрагент_" + Параметры.Идентификатор);
	
	Если Значение <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Значение.ТекстОшибки) Тогда 
			
			Ошибки.Добавить(Значение.ТекстОшибки);
			
		КонецЕсли;
		
		Возврат Значение.Ссылка;
		
	КонецЕсли;
	
	Контрагент = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(Параметры.Идентификатор));
	
	Если ОбщегоНазначения.СсылкаСуществует(Контрагент) Тогда 
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ, Контрагент);
		
		Возврат Контрагент;
		
	КонецЕсли;
		
	ИНН = Параметры.ИНН;
	КПП = Параметры.КПП;
		
	Если Не ЗначениеЗаполнено(ИНН) И Не ЗначениеЗаполнено(КПП) Тогда 
		
		ТекстОшибки = "Контрагент " + Параметры.Наименование + " ИНН и КПП не заполнено...";
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;

	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	РезультатЗарпоса = Запрос.Выполнить();
	
	Если РезультатЗарпоса.Пустой() Тогда 
		
		ТекстОшибки = "Контрагент" + Параметры.Наименование + " с ИНН: " + ИНН + ", КПП: " + КПП + " не найден...";
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат = РезультатЗарпоса.Выбрать();
	
	Если Не Результат.Количество() = 1 Тогда 
		
		ТекстОшибки = "Контрагент" + Параметры.Наименование + ", найдено несколько контрагентов с ИНН: " + ИНН + ", КПП: " + КПП + "...";
		
		ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ,, ТекстОшибки);
		
		Ошибки.Добавить(ТекстОшибки);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Результат.Следующий();
		
	ДобавитьЗначениеВ_КЭШ(Параметры.Идентификатор, КЭШ, Результат.Ссылка);
	
	Возврат Результат.Ссылка;
	
КонецФункции

Процедура ДобавитьЗначениеВ_КЭШ(Идентификатор, КЭШ, Ссылка = Неопределено, ТекстОшибки = Неопределено)
	
	Значение = Новый Структура;
	
	Значение.Вставить("Ссылка", 	 Ссылка);
	Значение.Вставить("ТекстОшибки", ТекстОшибки);
	
	КЭШ.Вставить("Контрагент_" + Идентификатор, Значение);

КонецПроцедуры


